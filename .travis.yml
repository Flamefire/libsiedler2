language: cpp
dist: trusty

notifications:
  email: false

branches:
  only:
    - master

os:
  - linux

compiler:
  - clang
  - g++

env:
  - BUILD_TYPE=Debug
  - BUILD_TYPE=Release

addons:
  apt:
    update: true
    sources:
      - sourceline: 'ppa:mhier/libboost-latest'
      - ubuntu-toolchain-r-test
    packages:
      - g++-6
      - lcov
      - cmake
      - cmake-data
      - libminiupnpc-dev
      - libboost1.68-dev

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/libutil
    - ${TRAVIS_BUILD_DIR}/deps/libendian

installDeps:
  &installDeps
  |
    DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"

    LIBUTIL_DIR="$DEPS_DIR/libutil"
    [ ! -d "$LIBUTIL_DIR/src" ] && git clone https://github.com/Return-To-The-Roots/libutil.git "$LIBUTIL_DIR" || true
    (cd ${LIBUTIL_DIR} && git clean -fxd && git checkout master && git fetch --all && git reset --hard origin/master)

    LIBENDIAN_DIR="$DEPS_DIR/libendian"
    [ ! -d "$LIBENDIAN_DIR/src" ] && git clone https://github.com/Return-To-The-Roots/libendian.git "$LIBENDIAN_DIR" || true
    (cd ${LIBENDIAN_DIR} && git clean -fxd && git checkout master && git fetch && git reset --hard origin/master)

    export CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:${LIBUTIL_DIR}:${LIBENDIAN_DIR}
    echo "Set cmake prefix path: '$CMAKE_PREFIX_PATH'"

matrix:
  include:
    - os: osx
      compiler: clang
      install:
        - *installDeps
        - brew update && brew install miniupnpc
      # Travis libs are x64 only
      env: BUILD_TYPE=Debug CXX_FLAGS=-std=c++03 ADDITIONAL_CMAKE_FLAGS="--no-arch=i386" GCOV="gcov"
  exclude:
    - compiler: clang
      env: BUILD_TYPE=Debug CXX_FLAGS=-std=c++03

install:
  - *installDeps
  - if [ "$CXX" = "g++" ]; then export CXX="g++-6"; export CC="gcc-6"; fi

  # Enable coverage analysis only in debug and for g++
  - |
      if [ "$CXX" = "g++" ] && [ "$BUILD_TYPE" = "Debug" ]; then
        export GCOV="gcov-6"

        # Install coveralls tool
        gem install coveralls-lcov

        export RTTR_COVERAGE="1"
        export ADDITIONAL_CMAKE_FLAGS="${ADDITIONAL_CMAKE_FLAGS} -DRTTR_ENABLE_COVERAGE=ON"
      else
        export GCOV="gcov" # Just to have anything valid
        export RTTR_COVERAGE="0"
      fi

script:
  # Information
  - $CXX --version
  - $GCOV --version
  - lcov --version 2>/dev/null || true
  - tools/travis-ci/build.sh ${BUILD_TYPE} "-DCMAKE_CXX_FLAGS=\"${CXX_FLAGS}\" ${ADDITIONAL_CMAKE_FLAGS}"

after_success:
  # Coverage.io
  - |
      if [ "$RTTR_COVERAGE" = "1" ]; then
        bash -c "find . -type f -name '*.gcno' -exec ${GCOV} -lpb {} +" || true
        files=$(find . -type f -name '*.gcov' -not -path '*/conftest_*.c.gcov')
        if [ "$files" != "" ]; then
          bash <(curl -s https://codecov.io/bash) -f "$files"
        fi
      fi
  # Coveralls
  - |
      if [ "$RTTR_COVERAGE" = "1" ]; then
        lcov --gcov-tool $GCOV --directory build --capture --output-file coverage.info --rc lcov_branch_coverage=1 > /dev/null

        # Remove everything from /usr (unrelated), contrib folder (3rd party data), test code and submodules
        lcov --gcov-tool $GCOV --remove coverage.info '/usr/*' 'examples/*' --output-file coverage.info > /dev/null

        # Debug output
        lcov --list coverage.info
        coveralls-lcov coverage.info
      fi
